{% extends "components/base.jinja2" %}
{% block main %}
    <h1>Analysis of {{ analysis.payload.data }}</h1>
    <p>ID: {{ analysis.root_uid }}</p>

    <h4>Tasks</h4>
    <p>
    <p>
        <a
            href="?task_filter=approved"
            class="btn {% if task_filter == "approved" %}btn-primary{% else %}btn-default{% endif %}">
                Approved
        </a>
        <a
            href="?task_filter=dismissed"
            class="btn {% if task_filter == "dismissed" %}btn-primary{% else %}btn-default{% endif %}">
                Dismissed
        </a>
        <a
            href="?task_filter=interesting_undecided"
            class="btn {% if task_filter == "interesting_undecided" %}btn-primary{% else %}btn-default{% endif %}">
                Interesting findings without manual decision
        </a>
        <a
            href="?task_filter=interesting"
            class="btn {% if task_filter == "interesting" %}btn-primary{% else %}btn-default{% endif %}">
                All interesting findings
        </a>
        <a
            href="?" class="btn {% if not task_filter %}btn-primary{% else %}btn-default{% endif %}">
                All tasks
        </a>
    </p>
    <table id="analysis" class="table table-hover">
        <thead>
            <tr>
                <th scope="col">receiver</th>
                <th scope="col">task</th>
                <th scope="col">headers</th>
                <th scope="col">status: reason</th>
                <th scope="col">decision</th>
            </tr>
      </thead>
  </table>
{% endblock %}

{% block scripts %}
<script>
  $(document).ready(function() {
    const table = $("#analysis").dataTable({
      "pageLength": 50,
      "search": "interesting",
      "ajax": {
          "url": "/api/analysis/{{ analysis.root_uid }}/children{% if task_filter %}?task_filter={{ task_filter.value }}{% endif %}",
          "dataSrc": ""
      },
      "columns": [
        {
          "data": "headers.receiver"
        },
        {
          "data": null,
          "render": function(task) {
            return `<a href="/task/${task.uid}">${task.target_string}</a>`
          }
        },
        {
          "data": "headers",
          "render": function(_, _, task) {
            let result = "";
            const append_badge = (color, value) => {
              result += `<span class="badge bg-${color}">${value}</span> `
            };

            if (task.priority !== "normal")
              append_badge("dark", task.priority);

            const status_map = {
              "CACHED": "info",
              "ERROR": "danger",
              "INTERESTING": "warning",
              "OK": "success",
            };
            append_badge(status_map[task.status], task.status);

            const headers_map = {
              "type": "primary",
              "service": "info",
            };

            for (const [header, value] of Object.entries(task.headers))
            {
              // blacklist
              if (["receiver"].includes(header))
                continue;

              append_badge(headers_map[header] || "info", `${header}:${value}`);
            }
            return result;
          },
        },
        {
          "data": "status_reason"
        },
        {
          "data": null,
          "render": function(task) {
            if (task.decision) {
                if (task.decision.decision_type == 'approved') {
                    badge = `<span class="badge bg-primary">approved</span>`;
                } else {
                    badge = `<span class="badge bg-secondary">dismissed</span>`;
                }
                return badge + ` (comment=${task.decision.operator_comment})`;
            } else {
                return `<a href="/task/${task.uid}">Decide</a>`;
            }
          }
        },
      ],
      "order": []
    });
  })
</script>
{% endblock %}
