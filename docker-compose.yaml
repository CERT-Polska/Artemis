services:
  redis:
    # Warning: don't upgrade to >=7.3 due to its non-free license
    # until the licensing situation gets more clear or e.g. an open-source fork appears
    image: redis:7.2.4
    restart: always
    volumes:
      - data-redis:/data

  s3mock:
    image: adobe/s3mock:latest
    environment:
      - initialBuckets=bucket
    entrypoint: ["sh", "-c", "java -jar s3mock.jar 2>&1 > /dev/null"]

    deploy:
      resources:
        limits:
          memory: 250M
    healthcheck:
      test: "wget 127.0.0.1:9090 -O/dev/null || exit 1"
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  postgres:
    command: -c 'max_connections=2000'
    image: postgres
    restart: always
    shm_size: 256mb
    environment:
      POSTGRES_DB: artemis
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    volumes:
      - data-postgres:/var/lib/postgresql/data

  # This is a legacy entry to facillitate migration - MongoDB is not used by Artemis anymore.
  db:
    # Even in the most quiet configuration, MongoDB produces a significant amount of logs.
    # Therefore mongoDB logs are disabled by default (although they can be enabled).
    command: ["bash", "-c", "/usr/local/bin/docker-entrypoint.sh mongod --wiredTigerCacheSizeGB 2 --auth --bind_ip_all 2>&1 >/dev/null"]
    environment:
     - MONGO_INITDB_ROOT_USERNAME=root
     - MONGO_INITDB_ROOT_PASSWORD=root
    image: mongo
    restart: always
    volumes:
     - data-mongodb:/data/db

  autoreporter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "bash -c '/wait-for-it.sh postgres:5432 -- python3 -m artemis.reporting.task_handler'"
    env_file: .env
    restart: always
    volumes:
      # Because the options parsing (which will tell us which previous reports directory the
      # user needs) happens inside the container, we don't know what directory to mount before
      # starting the container. This solution is far from perfect - feel free to propose a better
      # one.
      - /:/host-root/:ro
      - ./output/autoreporter/:/opt/output/autoreporter
      - ./docker/karton.ini:/etc/karton/karton.ini
      - "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"

  metrics:
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]
    command: "python3 -m artemis.metrics"

  autoarchiver:
    build:
      context: .
      dockerfile: docker/Dockerfile
    env_file: .env
    volumes:
      - ./archived-task-results/:/opt/archived-task-results/
    command: "bash -c '/wait-for-it.sh postgres:5432 -- python3 -m artemis.autoarchiver.autoarchiver'"
    restart: always

  web:
    build:
      context: .
      dockerfile: docker/Dockerfile
    depends_on: [karton-system, karton-logger]
    env_file: .env
    ports: ["5000:5000"]
    restart: always
    volumes:
      - data-web:/data
      - ./docker/karton.ini:/etc/karton/karton.ini:ro
      - ./output/autoreporter/:/opt/output/autoreporter
      - ${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/

  karton-bruter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.bruter"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-classifier:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.classifier"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-crtsh:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.crtsh"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-dashboard:
    depends_on: [karton-system, karton-logger]
    env_file: .env
    image: certpl/karton-dashboard:f719024c3387bab39c21f890af369afb5943d3cf
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-directory_index:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.directory_index"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-dns_scanner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.dns_scanner"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-domain_expiration_scanner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.domain_expiration_scanner"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-drupal_scanner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.drupal_scanner"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-example:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.example"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-ftp_bruter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.ftp_bruter"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-gau:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.gau"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-http_service_to_url:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.http_service_to_url"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-humble:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.humble"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: [ "./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/" ]

  karton-identifier:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.webapp_identifier"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-ip_lookup:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.ip_lookup"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-joomla_scanner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.joomla_scanner"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-logger:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.karton_logger"
    depends_on: [karton-system]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/", "./karton-logs/:/karton-logs"]

  karton-mail_dns_scanner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.mail_dns_scanner"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-mysql_bruter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.mysql_bruter"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-nuclei:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.nuclei"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes:
      - "./docker/karton.ini:/etc/karton/karton.ini"
      - "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"
      - data-nuclei-templates:/root/nuclei-templates
      - data-nuclei-config:/root/.config/nuclei

  karton-port_scanner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.port_scanner"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-postgresql_bruter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.postgresql_bruter"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-reverse_dns:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.reverse_dns_lookup"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-robots:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.robots"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-scripts_unregistered_domains:
    build:
      context: .
      dockerfile: docker/Dockerfile
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    command: "python3 -m artemis.modules.scripts_unregistered_domains"

  karton-shodan_vulns:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.shodan_vulns"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-ssh_bruter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.ssh_bruter"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-system:
    command: ["--setup-bucket"]
    depends_on:
      db:
        condition: service_started
      redis:
        condition: service_started
      s3mock:
        condition: service_healthy
    env_file: .env
    image: "certpl/karton-system:v5.3.3"
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]
    restart: always

  karton-vcs:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.vcs"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-wordpress_bruter:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.wordpress_bruter"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-wordpress_plugins:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.wordpress_plugins"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-wp_scanner:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.wp_scanner"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]

  karton-device_identifier:
    build:
      context: .
      dockerfile: docker/Dockerfile
    command: "python3 -m artemis.modules.device_identifier"
    depends_on: [karton-system, karton-logger]
    env_file: .env
    restart: always
    volumes: ["./docker/karton.ini:/etc/karton/karton.ini", "${DOCKER_COMPOSE_ADDITIONAL_SHARED_DIRECTORY:-./shared}:/shared/"]


volumes:
  data-nuclei-templates:
  data-nuclei-config:
  data-postgres:
  data-redis:
  data-web:

  # This is a legacy entry to facillitate migration - MongoDB is not used by Artemis anymore.
  data-mongodb:
