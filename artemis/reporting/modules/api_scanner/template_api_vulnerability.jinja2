{% if "api_vulnerability" in data.contains_type %}
    <li>{% trans %}We identified following API vulnerabilities:{% endtrans %}
        <ul>
            {% for report in data.reports %}
                {% if report.report_type == "api_vulnerability" %}
                    <li>
                        <tt>{{ report.target }}</tt> -
                        {% set raw_detail = report.additional_data.details %}
                        {% if "HTTP verb" in raw_detail %}
                            {% trans %}the endpoint accepts HTTP methods that is not documented as allowed, potentially enabling unintended operations{% endtrans %}
                        {% elif "vulnerable to SQL Injection" in raw_detail or "vulnerable to SQli" in raw_detail %}
                            {% trans %}SQL Injection - malicious input can manipulate database queries, leading to data leaks or unauthorized access{% endtrans %}
                        {% elif "time-based SQL Injection" in raw_detail %}
                            {% trans %}time-based SQL Injection - an attacker can infer data using timing-based payloads, exploiting database behavior{% endtrans %}
                        {% elif "OS Command Injection" in raw_detail %}
                            {% trans %}OS Command Injection - arbitrary system commands can be executed on the server, leading to full compromise{% endtrans %}
                        {% elif "XSS/HTML Injection" in raw_detail %}
                            {% trans %}XSS/HTML Injection - untrusted input is rendered in the browser, enabling attacks such as session hijacking or defacement. In the case of defacement, reflected XSS allows an attacker to inject and execute arbitrary HTML or JavaScript, altering the appearance or content of the affected page for the victim, effectively impersonating the administrator or changing site behavior{% endtrans %}
                        {% elif "SSTI" in raw_detail %}
                            {% trans %}SSTI - Server-Side Template Injection allows attackers to execute code on the server by injecting into templates{% endtrans %}
                        {% elif "fails to implement security authentication" in raw_detail %}
                            {% trans %}missing authentication - endpoints lack proper access control, allowing unauthorized access{% endtrans %}
                        {% else %}
                            {{ raw_detail }}
                        {% endif %}
                        ({% trans %}method:{% endtrans %}
                        {{ report.additional_data.method|upper }},
                        {% trans %}status code:{% endtrans %} {{ report.additional_data.status_code }}.
                    </li>
                {% endif %}
            {% endfor %}
        </ul>
    </li>
{% endif %}
